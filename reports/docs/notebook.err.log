Traceback (most recent call last):
  File "/home/stephan/miniconda3/envs/jupyterbook/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/stephan/miniconda3/envs/jupyterbook/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/stephan/miniconda3/envs/jupyterbook/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/stephan/miniconda3/envs/jupyterbook/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/stephan/miniconda3/envs/jupyterbook/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/stephan/miniconda3/envs/jupyterbook/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/stephan/miniconda3/envs/jupyterbook/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#@title
def create_map():
    geluid_df = pd.read_csv(f'{data_path}GELUID_LUCHTVAART.csv', sep=";")
    grenzen_df = gpd.read_file(f'{data_path}Grenzen.json')
    slaap_df = pd.read_csv(f"{data_path}Slaapoverlast.csv", sep=";")

    slaap_df['log2 van het percentage dat ernstige slaapverstoring door vliegverkeer ervaart'] = np.log2(slaap_df['% dat ernstige slaapverstoring door vliegverkeer ervaart (2020)'])

    # renaming and converting the geometry column for use
    geluid_df.rename(columns={'WKT_LNG_LAT': 'geometry'}, inplace=True)
    geluid_df['geometry'] = geluid_df['geometry'].apply(shapely.wkt.loads)

    # preparing the two datasets and converting them to Geopandas datasets
    slaap_gdf = grenzen_df.merge(slaap_df, 'inner', left_on="GEMEENTENAAM", right_on="Gemeente")
    geluid_gdf = gpd.GeoDataFrame(geluid_df, crs='epsg:4326')

    # renaming two columns for better readability on the final map
    geluid_gdf.rename(columns={'KLASSE': "De gemiddelde geluidsbelasting in decibel over het etmaal, uitgedrukt in Lden",
                        'SELECTIE': "decibel range"}, inplace=True)

    # instantiating the two maps
    my_map = slaap_gdf.explore("log2 van het percentage dat ernstige slaapverstoring door vliegverkeer ervaart",
                                cmap="YlGnBu",
                                tiles='CartoDB positron',
                                min_zoom=10,
                                max_zoom=13,
                                height="100%",
                                width='100%',
                                name="slaapverstoring",
                                tooltip=["Gemeente", "% dat ernstige slaapverstoring door vliegverkeer ervaart (2020)"],
                                popup=["Gemeente", "% dat ernstige slaapverstoring door vliegverkeer ervaart (2020)", "Aantal respondenten 18-64 jaar (2020)"])

    geluid_gdf.explore("De gemiddelde geluidsbelasting in decibel over het etmaal, uitgedrukt in Lden",
                        legend=True,
                        m=my_map,
                        min_zoom=10,
                        max_zoom=13,
                        height="100%",
                        width='100%',
                        name="geluidsbelasting",
                        cmap='magma',
                        tooltip=["De gemiddelde geluidsbelasting in decibel over het etmaal, uitgedrukt in Lden"],
                        popup=["De gemiddelde geluidsbelasting in decibel over het etmaal, uitgedrukt in Lden"])

    # adding an extra background map and layer toggle ability
    folium.TileLayer('OpenStreetMap').add_to(my_map)
    folium.TileLayer('CartoDB dark_matter').add_to(my_map)


    folium.LayerControl().add_to(my_map)

    # adding a marker to show where schiphol airport is
    my_map.add_child(
    folium.Marker(
        location=(52.308056, 4.764167),
        popup="<b>Schiphol<b>",
        tooltip="<b>Schiphol<b>",
        icon=folium.Icon(color="red", icon="plane"),
    )
)

    return my_map


# Call the function to create the map
my_map = create_map()

# Display the map using IPython display()
display(my_map)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
File [0;32m~/miniconda3/envs/jupyterbook/lib/python3.11/site-packages/geopandas/explore.py:287[0m, in [0;36m_explore[0;34m(df, column, cmap, color, m, tiles, attr, tooltip, popup, highlight, categorical, legend, scheme, k, vmin, vmax, width, height, categories, classification_kwds, control_scale, marker_type, marker_kwds, style_kwds, highlight_kwds, missing_kwds, tooltip_kwds, popup_kwds, legend_kwds, map_kwds, **kwargs)[0m
[1;32m    286[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[0;32m--> 287[0m [38;5;28;01mfrom[39;00m [38;5;21;01mmapclassify[39;00m [38;5;28;01mimport[39;00m classify
[1;32m    289[0m [38;5;66;03m# isolate MPL version - GH#2596[39;00m

[0;31mModuleNotFoundError[0m: No module named 'mapclassify'

During handling of the above exception, another exception occurred:

[0;31mImportError[0m                               Traceback (most recent call last)
Cell [0;32mIn[8], line 66[0m
[1;32m     62[0m     [38;5;28;01mreturn[39;00m my_map
[1;32m     65[0m [38;5;66;03m# Call the function to create the map[39;00m
[0;32m---> 66[0m my_map [38;5;241m=[39m [43mcreate_map[49m[43m([49m[43m)[49m
[1;32m     68[0m [38;5;66;03m# Display the map using IPython display()[39;00m
[1;32m     69[0m display(my_map)

Cell [0;32mIn[8], line 22[0m, in [0;36mcreate_map[0;34m()[0m
[1;32m     18[0m geluid_gdf[38;5;241m.[39mrename(columns[38;5;241m=[39m{[38;5;124m'[39m[38;5;124mKLASSE[39m[38;5;124m'[39m: [38;5;124m"[39m[38;5;124mDe gemiddelde geluidsbelasting in decibel over het etmaal, uitgedrukt in Lden[39m[38;5;124m"[39m,
[1;32m     19[0m                     [38;5;124m'[39m[38;5;124mSELECTIE[39m[38;5;124m'[39m: [38;5;124m"[39m[38;5;124mdecibel range[39m[38;5;124m"[39m}, inplace[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m     21[0m [38;5;66;03m# instantiating the two maps[39;00m
[0;32m---> 22[0m my_map [38;5;241m=[39m [43mslaap_gdf[49m[38;5;241;43m.[39;49m[43mexplore[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mlog2 van het percentage dat ernstige slaapverstoring door vliegverkeer ervaart[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     23[0m [43m                            [49m[43mcmap[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mYlGnBu[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     24[0m [43m                            [49m[43mtiles[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mCartoDB positron[39;49m[38;5;124;43m'[39;49m[43m,[49m
[1;32m     25[0m [43m                            [49m[43mmin_zoom[49m[38;5;241;43m=[39;49m[38;5;241;43m10[39;49m[43m,[49m
[1;32m     26[0m [43m                            [49m[43mmax_zoom[49m[38;5;241;43m=[39;49m[38;5;241;43m13[39;49m[43m,[49m
[1;32m     27[0m [43m                            [49m[43mheight[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43m100[39;49m[38;5;124;43m%[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     28[0m [43m                            [49m[43mwidth[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43m100[39;49m[38;5;124;43m%[39;49m[38;5;124;43m'[39;49m[43m,[49m
[1;32m     29[0m [43m                            [49m[43mname[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mslaapverstoring[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     30[0m [43m                            [49m[43mtooltip[49m[38;5;241;43m=[39;49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mGemeente[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;132;43;01m% d[39;49;00m[38;5;124;43mat ernstige slaapverstoring door vliegverkeer ervaart (2020)[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m     31[0m [43m                            [49m[43mpopup[49m[38;5;241;43m=[39;49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mGemeente[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;132;43;01m% d[39;49;00m[38;5;124;43mat ernstige slaapverstoring door vliegverkeer ervaart (2020)[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mAantal respondenten 18-64 jaar (2020)[39;49m[38;5;124;43m"[39;49m[43m][49m[43m)[49m
[1;32m     33[0m geluid_gdf[38;5;241m.[39mexplore([38;5;124m"[39m[38;5;124mDe gemiddelde geluidsbelasting in decibel over het etmaal, uitgedrukt in Lden[39m[38;5;124m"[39m,
[1;32m     34[0m                     legend[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[1;32m     35[0m                     m[38;5;241m=[39mmy_map,
[0;32m   (...)[0m
[1;32m     42[0m                     tooltip[38;5;241m=[39m[[38;5;124m"[39m[38;5;124mDe gemiddelde geluidsbelasting in decibel over het etmaal, uitgedrukt in Lden[39m[38;5;124m"[39m],
[1;32m     43[0m                     popup[38;5;241m=[39m[[38;5;124m"[39m[38;5;124mDe gemiddelde geluidsbelasting in decibel over het etmaal, uitgedrukt in Lden[39m[38;5;124m"[39m])
[1;32m     45[0m [38;5;66;03m# adding an extra background map and layer toggle ability[39;00m

File [0;32m~/miniconda3/envs/jupyterbook/lib/python3.11/site-packages/geopandas/geodataframe.py:2101[0m, in [0;36mGeoDataFrame.explore[0;34m(self, *args, **kwargs)[0m
[1;32m   2099[0m [38;5;129m@doc[39m(_explore)
[1;32m   2100[0m [38;5;28;01mdef[39;00m [38;5;21mexplore[39m([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m-> 2101[0m     [38;5;28;01mreturn[39;00m [43m_explore[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/envs/jupyterbook/lib/python3.11/site-packages/geopandas/explore.py:297[0m, in [0;36m_explore[0;34m(df, column, cmap, color, m, tiles, attr, tooltip, popup, highlight, categorical, legend, scheme, k, vmin, vmax, width, height, categories, classification_kwds, control_scale, marker_type, marker_kwds, style_kwds, highlight_kwds, missing_kwds, tooltip_kwds, popup_kwds, legend_kwds, map_kwds, **kwargs)[0m
[1;32m    294[0m         [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcm[39;00m [38;5;28;01mas[39;00m [38;5;21;01mcm[39;00m
[1;32m    296[0m [38;5;28;01mexcept[39;00m ([38;5;167;01mImportError[39;00m, [38;5;167;01mModuleNotFoundError[39;00m):
[0;32m--> 297[0m     [38;5;28;01mraise[39;00m [38;5;167;01mImportError[39;00m(
[1;32m    298[0m         [38;5;124m"[39m[38;5;124mThe [39m[38;5;124m'[39m[38;5;124mfolium[39m[38;5;124m'[39m[38;5;124m, [39m[38;5;124m'[39m[38;5;124mmatplotlib[39m[38;5;124m'[39m[38;5;124m and [39m[38;5;124m'[39m[38;5;124mmapclassify[39m[38;5;124m'[39m[38;5;124m packages are required for [39m[38;5;124m"[39m
[1;32m    299[0m         [38;5;124m"[39m[38;5;124m'[39m[38;5;124mexplore()[39m[38;5;124m'[39m[38;5;124m. You can install them using [39m[38;5;124m"[39m
[1;32m    300[0m         [38;5;124m"[39m[38;5;124m'[39m[38;5;124mconda install -c conda-forge folium matplotlib mapclassify[39m[38;5;124m'[39m[38;5;124m [39m[38;5;124m"[39m
[1;32m    301[0m         [38;5;124m"[39m[38;5;124mor [39m[38;5;124m'[39m[38;5;124mpip install folium matplotlib mapclassify[39m[38;5;124m'[39m[38;5;124m.[39m[38;5;124m"[39m
[1;32m    302[0m     )
[1;32m    304[0m [38;5;66;03m# xyservices is an optional dependency[39;00m
[1;32m    305[0m [38;5;28;01mtry[39;00m:

[0;31mImportError[0m: The 'folium', 'matplotlib' and 'mapclassify' packages are required for 'explore()'. You can install them using 'conda install -c conda-forge folium matplotlib mapclassify' or 'pip install folium matplotlib mapclassify'.

